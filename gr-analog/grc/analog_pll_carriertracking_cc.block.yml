id: analog_pll_carriertracking_cc
label: PLL CARRIERTRACKING
category: '[Analog]'
flags: '[python, cpp]'
templates:
  imports: from gnuradio import analog
  make: analog.pll_carriertracking_cc(${lock_detector}, ${get_loop_bandwidth}, ${get_damping_factor},
    ${get_alpha}, ${get_beta}, ${get_frequency}, ${get_phase}, ${get_min_freq}, ${get_max_freq})
  callbacks: !!python/tuple
  - set_lock_threshold(${arg0})
  - set_loop_bandwidth(${bw})
  - set_damping_factor(${df})
  - set_alpha(${alpha})
  - set_beta(${beta})
  - set_frequency(${freq})
  - set_phase(${phase})
  - set_min_freq(${freq})
  - set_max_freq(${freq})
parameters:
- id: lock_detector
  label: Lock_detector
  dtype: bool
  read_only: true
- id: get_loop_bandwidth
  label: Get_loop_bandwidth
  dtype: float
  read_only: true
- id: get_damping_factor
  label: Get_damping_factor
  dtype: float
  read_only: true
- id: get_alpha
  label: Get_alpha
  dtype: float
  read_only: true
- id: get_beta
  label: Get_beta
  dtype: float
  read_only: true
- id: get_frequency
  label: Get_frequency
  dtype: float
  read_only: true
- id: get_phase
  label: Get_phase
  dtype: float
  read_only: true
- id: get_min_freq
  label: Get_min_freq
  dtype: float
  read_only: true
- id: get_max_freq
  label: Get_max_freq
  dtype: float
  read_only: true
inputs:
- domain: stream
  dtype: sizeof(gr_complex)
outputs:
- domain: stream
  dtype: sizeof(gr_complex)
cpp_templates:
  includes: '#include <gnuradio/analog/pll_carriertracking_cc.h>'
  declartions: analog::pll_carriertracking_cc::sptr ${id}
  make: this->${id} = analog::pll_carriertracking_cc::make(${lock_detector}, ${get_loop_bandwidth},
    ${get_damping_factor}, ${get_alpha}, ${get_beta}, ${get_frequency}, ${get_phase},
    ${get_min_freq}, ${get_max_freq})
  callbacks: !!python/tuple
  - set_lock_threshold(${arg0})
  - set_loop_bandwidth(${bw})
  - set_damping_factor(${df})
  - set_alpha(${alpha})
  - set_beta(${beta})
  - set_frequency(${freq})
  - set_phase(${phase})
  - set_min_freq(${freq})
  - set_max_freq(${freq})
  link: gnuradio-analog
documentation:
- "/*!\n     * \\brief Implements a PLL which locks to the input frequency and outputs
  the\n     * input signal mixed with that carrier.\n     * \\ingroup synchronizers_blk\n
  \    *\n     * \\details\n     * Input stream 0: complex\n     * Output stream 0:
  complex\n     *\n     * This PLL locks onto a [possibly noisy] reference carrier
  on the\n     * input and outputs that signal, downconverted to DC\n     *\n     *
  All settings max_freq and min_freq are in terms of radians per\n     * sample, NOT
  HERTZ. The loop bandwidth determines the lock range\n     * and should be set around
  pi/200 -- 2pi/100.  \\sa\n     * pll_freqdet_cf, pll_carriertracking_cc\n     */"
- // gr::analog::pll_carriertracking_cc::sptr
- "/* \\brief Make a carrier tracking PLL block.\n       *\n       * \\param loop_bw:
  control loop's bandwidth parameter.\n       * \\param max_freq: maximum (normalized)
  frequency PLL will lock to.\n       * \\param min_freq: minimum (normalized) frequency
  PLL will lock to.\n       */"
- /* namespace analog */
- /* namespace gr */
- /* INCLUDED_ANALOG_PLL_CARRIERTRACKING_CC_H */
file_format: 1
